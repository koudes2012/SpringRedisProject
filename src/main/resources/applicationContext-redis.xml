<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"      
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"      
    xmlns:context="http://www.springframework.org/schema/context"      
    xmlns:mvc="http://www.springframework.org/schema/mvc"      
    xmlns:cache="http://www.springframework.org/schema/cache"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans        
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd        
                        http://www.springframework.org/schema/context        
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd        
                        http://www.springframework.org/schema/mvc        
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd    
                        http://www.springframework.org/schema/cache     
                        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">  
                        
    <!-- loading configuration files -->  
    <context:property-placeholder location="classpath:*.properties" />  
    <!-- redis connection pool -->    
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >    
        <!-- Number of connections to Redis that just sit there and do nothing -->    
        <property name="maxIdle" value="${redis.maxIdle}" />    
        <!-- Max number of connections that can be created  -->  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <!-- How long to wait in milliseconds if calling JedisPool -->    
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />    
        <!-- Minimum amount of time an connection may sit idle -->  
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />   
        <!-- Maximum number of connections to test in each idle check -->  
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />   
        <!-- Idle connection checking period -->  
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />   
        <!-- Test whether connection is dead when connection retrieval method is called -->    
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />    
        <!-- Test whether connections are dead during idle periods -->  
        <property name="testWhileIdle" value="${redis.testWhileIdle}" />    
    </bean>
      
    <!--redis connection factory -->  
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">   
        <property name="poolConfig" ref="jedisPoolConfig"></property>   
        <!-- IP address -->  
        <property name="hostName" value="${redis.hostName}"></property>   
        <!-- port -->  
        <property name="port" value="${redis.port}"></property>   
        <!-- password -->  
        <property name="password" value="${redis.password}" />  
        <!-- timeout  -->  
        <property name="timeout" value="${redis.timeout}"></property>   
    </bean>
    <!-- redis template -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >    
        <property name="connectionFactory" ref="jedisConnectionFactory" />    
        <!-- If don't set Serializer, the default will use String. If use User object, then will be error: User can't cast to String！  -->    
        <property name="keySerializer" >    
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />    
        </property>    
        <property name="valueSerializer" >    
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />    
        </property>    
        <property name="hashKeySerializer">    
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>    
        </property>    
        <property name="hashValueSerializer">    
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>    
        </property>    
        <!-- Enable transaction  -->  
        <property name="enableTransactionSupport" value="true"></property>  
    </bean>    
      
    <!-- self-define redis tool -->  
    <bean id="redisUtil" class="com.junyu.RedisUtil">  
        <property name="redisTemplate" ref="redisTemplate" />  
    </bean>   
</beans>